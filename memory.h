// Copyright 2014 Andrew Oates.  All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

#ifndef APOO_MEMORY_H
#define APOO_MEMORY_H

#include <stdint.h>

// A structure generated by init/mem_init.c that describes the layout of virtual
// memory, how much of the kernel is mapped (and where), and what physical pages
// have been allocated thus far.
typedef struct {
  // The physical and virtual addresses of the kernel start and end.
  uint32_t kernel_start_phys;
  uint32_t kernel_end_phys;

  uint32_t kernel_start_virt;
  uint32_t kernel_end_virt;

  // The area of virtual memory that has been mapped for use by the kernel.
  uint32_t mapped_start;
  uint32_t mapped_end;

  // The amount of lower (<1MB) and upper (>1MB) memory available on the
  // machine, in bytes.
  uint32_t lower_memory;
  uint32_t upper_memory;
} memory_info_t;

#endif
